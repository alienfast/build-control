{"version":3,"file":"build-control.cjs.js","sources":["../src/base.js","../src/paths.js","../src/baseSourced.js","../src/git.js","../src/npm.js","../src/buildControl.js"],"sourcesContent":["import extend from 'extend'\nimport stringify from 'stringify-object'\nimport shelljs from 'shelljs'\nimport chalk from 'chalk'\nimport fancyLog from 'fancy-log'\n\nexport const Default = {\n  debug: false,\n  sensitive: {},\n  cwd: 'dist'        // The directory that contains your built code.\n}\n\nconst Base = class {\n\n  /**\n   *\n   * @param config - customized overrides\n   */\n  constructor(config) {\n    this.config = extend(true, {}, Default, config)\n\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  codeExec(command, logResult = true) {\n    let code = this.exec(command, logResult, true)\n    this.debug(`codeExec result: ${code}`)\n    return code\n  }\n\n  booleanExec(command) {\n    if (this.codeExec(command, false) == 0) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  /**\n   * Wraps shellJs calls that act on the file structure to give better output and error handling\n   * @param command\n   * @param logResult - return output from the execution, defaults to true. If false, will return code instead\n   * @param returnCode - defaults to false which will throw Error on error, true will return result code\n   */\n  exec(command, logResult = true, returnCode = false) {\n    let options = {silent: true}\n    if (this.config.cwd) {\n      options['cwd'] = this.config.cwd\n    }\n    else {\n      this.notifyError('cwd is required')\n    }\n\n    if(command.includes(`undefined`)){\n      this.notifyError(`Invalid command: ${command}`)\n    }\n\n    this.debug(`Executing \\`${command}\\` with cwd: ${options['cwd']}`)\n    let shellResult = shelljs.exec(command, options)\n    let output = this.logShellOutput(shellResult, logResult);\n\n    if (shellResult.code === 0 || shellResult.code === 1) {\n\n      // ---\n      // determine the return value\n      if (returnCode) {\n        return shellResult.code\n      }\n      else {\n        return output\n      }\n    }\n    else {\n      if (returnCode) {\n        return shellResult.code\n      }\n      else {\n        this.notifyError(`Command failed \\`${command}\\`, cwd: ${options.cwd}: ${shellResult.stderr}.`)\n      }\n    }\n  }\n\n  notifyError(msg){\n    this.error(msg)\n    throw new Error(this.maskSensitive(msg))\n  }\n\n  logShellOutput(shellResult, logResult) {\n    //this.debug(`[exit code] ${shellResult.code}`)\n\n    // ---\n    // Log the result\n    // strangely enough, sometimes useful messages from git are an stderr even when it is a successful command with a 0 result code\n    let output = shellResult.stdout\n    if (output == '') {\n      output = shellResult.stderr\n    }\n\n    //this.log(stringify(shellResult))\n    if (output != '') {\n      if (logResult) {\n        this.log(output)\n      }\n      else {\n        this.debug(`[output] \\n${output}`)\n      }\n    }\n    return output;\n  }\n\n  log(message, level = null){\n    let msg = ``\n    if(level){\n      msg += level\n    }\n    msg += `[${chalk.grey(this.constructor.name)}] ${message}`\n    fancyLog(this.maskSensitive(msg))\n  }\n\n  error(msg) {\n    this.log(msg, `[${chalk.red('error')}]`)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(msg, `[${chalk.cyan('debug')}]`)\n    }\n  }\n\n  maskSensitive(str) {\n    let result = str\n    for(let key of Object.keys(this.config.sensitive)){\n      result = result.replace(key, this.config.sensitive[key], 'gmi')\n    }\n    return result\n  }\n\n  debugDump(msg, obj) {\n    this.debug(`${msg}:\\n${stringify(obj)}`)\n  }\n}\n\nexport default Base\n","import path from 'path'\nimport pathIsAbsolute from 'path-is-absolute'\n\nconst Paths = class {\n\n  static resolveCwd(base, cwd) {\n    if (!pathIsAbsolute(cwd)) {\n      return path.join(base, cwd)\n    }\n    else {\n      return cwd\n    }\n  }\n}\n\nexport default Paths\n","import Base from './base'\nimport Paths from './paths'\nimport extend from 'extend'\nimport shelljs from 'shelljs'\n\nconst Default = {\n  sourceCwd: shelljs.pwd(), // The base directory of the source e.g. the directory of the package.json (not usually necessary to specify, but useful for odd structures and tests)\n  cwd: 'dist'        // The directory that contains your built code.\n}\n\nconst BaseSourced = class extends Base {\n\n  constructor(config = {}) {\n    super(extend(true, {}, Default, config))\n\n    // get a fully resolved sourceCwd based on the process cwd (if not an absolute path)\n    this.config.sourceCwd = Paths.resolveCwd(shelljs.pwd(), this.config.sourceCwd)\n\n    // get a fully resolved cwd based on the sourceCwd (if not an absolute path)\n    this.config.cwd = Paths.resolveCwd(this.config.sourceCwd, this.config.cwd)\n  }\n}\n\nexport default BaseSourced\n","import Base from './base'\nimport extend from 'extend'\nimport fs from 'fs'\nimport crypto from 'crypto'\nimport path from 'path'\n\nconst Default = {}\n\nconst Git = class extends Base {\n\n  constructor(config = {}) {\n    super(extend(true, {}, Default, config))\n  }\n\n  version() {\n    return (this.exec('git --version', false).match(/\\d+\\.\\d+\\.\\d+/) || []).shift()\n  }\n\n  diff(logResult = true) {\n    return this.exec('git diff', logResult)\n  }\n\n  ensureCommitted(){\n    let diff = this.diff(false)\n    if (diff !== '') {\n      this.notifyError(`There are uncommitted changes in your working directory ${this.config.cwd}. Please commit the changes first.`)\n    }\n    else {\n      this.debug(`No diffs (uncommitted changes) found.`)\n    }\n  }\n\n  sourceBranch() {\n    return this.exec('git rev-parse --abbrev-ref HEAD', false).replace(/\\n/g, '')\n  }\n\n  sourceCommit() {\n    return this.exec('git rev-parse --short HEAD', false).replace(/\\n/g, '')\n  }\n\n  sourceCommitFull() {\n    return this.exec('git rev-parse HEAD', false).replace(/\\n/g, '')\n  }\n\n  init() {\n    this.exec('git init')\n  }\n\n  configure(key, value) {\n    this.exec(`git config \"${key}\" \"${value}\"`)\n  }\n\n  remote() {\n    return this.exec('git remote', false)\n  }\n\n  remoteAdd(name, location) {\n    this.exec(`git remote add ${name} ${location}`)\n  }\n\n  /**\n   * Fetch remote refs to a specific branch, equivalent to a pull without checkout\n   */\n  fetch(remoteName, branch, shallow = false) {\n    let depth = shallow ? '--depth=1 ' : ''\n    // `--update-head-ok` allows fetch on a branch with uncommited changes\n    this.exec(`git fetch --progress --verbose --update-head-ok ${depth}${remoteName} ${branch}`) //, false, true)\n  }\n\n  /**\n   * Make the current working tree the branch HEAD without checking out files\n   * @param branch\n   */\n  symbolicRefHead(branch) {\n    this.exec(`git symbolic-ref HEAD refs/heads/${branch}`)\n  }\n\n  /**\n   * Make sure the stage is clean\n   */\n  reset() {\n    this.exec('git reset', false)\n  }\n\n  /**\n   *\n   * @param branch\n   * @param remoteName\n   * @param remoteBranch\n   */\n  track(branch, remoteName = 'origin', remoteBranch = null) {\n    if (remoteBranch == null) {\n      remoteBranch = branch\n    }\n    // Attempt to track a branch from origin\n    //  It may fail on times that the branch is already tracking another remote. There is no problem when that happens, nor does it have any affect\n    this.codeExec(`git branch --track ${branch} ${remoteName}/${remoteBranch}`, false)\n  }\n\n  checkout(branch) {\n    this.exec(`git checkout --orphan ${branch}`)\n  }\n\n  branchRemote(branch, remoteName, remoteBranch) {\n    this.exec(`git branch --set-upstream-to=${remoteName}/${remoteBranch} ${branch}`)\n  }\n\n  configBranchRemote(branch) {\n    try {\n      return this.exec(`git config branch.${branch}.remote`, false).replace(/\\n/g, '')\n    }\n    catch (error) {\n      return null\n    }\n  }\n\n  branchExists(branch) {\n    return this.booleanExec(`git show-ref --verify --quiet refs/heads/${branch}`)\n  }\n\n  branchRemoteExists(branch, remoteName) {\n    return this.booleanExec(`git ls-remote --exit-code ${remoteName} ${branch}`)\n  }\n\n  status(file = '') {\n    let result = this.exec(`git status -sb --porcelain ${file}`, false)\n    if (result === '') {\n      return null\n    }\n    else {\n      return result\n    }\n  }\n\n  add(file = `.`) {\n    this.exec(`git add -A ${file}`)\n  }\n\n  hash(prefix, text) {\n    return `${prefix}-${crypto.createHash('md5').update(text).digest('hex').substring(0, 6)}`\n  }\n\n  commit(message) {\n    // generate commit message\n    let commitMessageFile = path.join(this.config.cwd, this.hash('commitMessageFile', message))\n    fs.writeFileSync(commitMessageFile, message)\n    this.exec(`git commit --file=${commitMessageFile}`)\n\n    fs.unlinkSync(commitMessageFile)\n  }\n\n  tag(tag) {\n    this.exec(`git tag ${tag}`)\n  }\n\n  tagExists(tag, remoteName) {\n    return this.booleanExec(`git ls-remote --tags --exit-code ${remoteName} ${tag}`)\n  }\n\n  push(remoteName, branch, force = false) {\n    let withForce = force ? ' --force ' : ''\n\n    this.log(`Pushing ${branch} to ${remoteName}${withForce}`)\n    this.exec(`git push ${withForce}${remoteName} ${branch}`) //, false, true)\n  }\n\n  pushTag(remoteName, tag) {\n    this.exec(`git push ${remoteName} ${tag}`)\n  }\n}\n\nexport default Git\n","import BaseSourced from './baseSourced'\nimport Git from './git'\nimport extend from 'extend'\nimport fs from 'fs-extra'\nimport path from 'path'\nimport shelljs from 'shelljs'\n\nconst Default = {}\n\nconst Npm = class extends BaseSourced {\n\n  constructor(config = {}) {\n    super(extend(true, {}, Default, config))\n    this.sourceGit = new Git({cwd: this.config.sourceCwd, debug: this.config.debug, sensitive: this.config.sensitive})\n  }\n\n  publish() {\n    if(!this.hasPackage()){\n      return\n    }\n\n    this.exec('npm publish')\n  }\n\n  bump() {\n    if(!this.hasPackage()){\n      return\n    }\n\n    if(!this.config.versionBump){\n      return\n    }\n\n    this.sourceGit.ensureCommitted()\n\n    let fromVersion = this.package().version\n    this.exec(`npm --no-git-tag-version version ${this.config.versionBump}`)\n    this._package = null\n\n    let toVersion = this.package().version\n    this.sourceGit.add('package.json')\n    this.sourceGit.commit(`Bumped version from ${fromVersion} to ${toVersion}`)\n  }\n\n  package() {\n    if (this._package) {\n      return this._package\n    }\n    else {\n      return this._package = this.readPackage()\n    }\n  }\n\n  packageFile(){\n    return path.join(this.config.sourceCwd, 'package.json')\n  }\n\n  hasPackage(){\n    let file = this.packageFile()\n    if (shelljs.test('-f', file, {silent: true})) {\n      this.debug(`Found package.json at ${file}`)\n      return true\n    }\n    else {\n      this.debug(`package.json not found at ${file}`)\n      return false\n    }\n  }\n\n  readPackage() {\n    if (this.hasPackage()) {\n      return JSON.parse(fs.readFileSync(this.packageFile(), 'utf8'))\n    }\n    else {\n      return null\n    }\n  }\n}\n\nexport default Npm\n","import BaseSourced from './baseSourced'\nimport Git from './git'\nimport Npm from './npm'\nimport extend from 'extend'\nimport fs from 'fs-extra'\nimport path from 'path'\nimport url from 'url'\nimport semver from 'semver'\n\nconst Default = {\n  branch: 'dist',     // The branch to commit to.\n  versionBump: 'patch',   // Will bump the versino if package.json is present https://docs.npmjs.com/cli/version.  Pass false to avoid bump.\n  remote: {\n    repo: '../',      // The remote repo to push to (URL|RemoteName|FileSystemPath). Common examples include:\n                      //   - `git@github.com:alienfast/foo.git` - your main project's remote (gh-pages branch)\n                      //   - `../` - the local project repository itself\n\n    // If token && login are provided, the remote.repo will be formatted to include these\n    login: undefined,\n    token: undefined,\n    branch: undefined// The remote branch to push to. Common usage would be for Heroku's master branch requirement.\n  },\n  clean: { // clean the cwd dir before/after a run\n    before: false,\n    after: false\n  },\n  tag: {\n    name: undefined,   // fn or string.  Default will autoresolve from the package.json version if possible.  Pass false to avoid tagging.\n    existsFailure: true // if tag already exists, fail the execution\n  },\n  push: true,        // Pushes `branch` to remote. If tag is set, pushes the specified tag as well. false will disable\n  disableRelativeAutoPush: false, // when testing, we may have nothing to push to.  By default, if using a remote repo that is relative, will try to push using the config.branch using the sourceGit all the way to the server.\n  commit: {\n    auto: true,      // Commits built code to `branch`. A new commit is only created if the built code has changed. false will disable\n\n    // The commit template to use when committing. (special characters must be escaped)\n    //  The following tokens are replaced:\n    //    - %sourceName%:   the package.json name or the project directory name\n    //    - %sourceTag%: the current tag i.e. v1.0.0\n    //    - %sourceBranch%: the current branch\n    //    - %sourceCommit%: the most recent commit\n    template: `Built %sourceName% %sourceTag% from commit %sourceCommit% on branch %sourceBranch%`,\n    ensure: true // require the source and build to be fully committed prior to running.\n  },\n  fetch: {\n    shallow: false    // Fetches branch from remote with the flag --depth=1. Which makes a shallow clone with a history truncated to the last revision. Might bring some boost on long-history repositories.\n  },\n  git: {\n    config: {}         // [git config](http://git-scm.com/docs/git-config) settings for the repository when preparing the repository. e.g. `{'user.name': 'John Doe'}`\n  },\n  force: false     // Pushes branch to remote with the flag --force. This will NOT checkout the remote branch, and will OVERRIDE remote with the repo commits.  Use with caution.\n}\n\nconst BuildControl = class extends BaseSourced {\n\n  constructor(config = {}) {\n    super(extend(true, {},\n      Default,\n      {tag: {name: () => this.autoResolveTagName()}}, // tag package version auto resolver\n      config\n    ))\n\n    // modify\n\n    // Build remote repo if sensitive information is passed in\n    if (this.config.remote.login && this.config.remote.token) {\n      this.log(`Configuring remote with login and token...`)\n      let remote = url.parse(this.config.remote.repo)\n\n      this.config.remote.repo = url.format({\n        protocol: remote.protocol,\n        auth: this.config.remote.login + ':' + this.config.remote.token,\n        host: remote.host,\n        pathname: remote.pathname\n      })\n\n      // configure sensitive information\n      this.config.sensitive[`${this.config.remote.login}:${this.config.remote.token}`] = '<credentials>'\n      this.config.sensitive[this.config.remote.token] = '<token>'\n    }\n\n    this.sourceGit = new Git({\n      debug: this.config.debug,\n      cwd: this.config.sourceCwd,\n      sensitive: this.config.sensitive\n    })\n\n    this.git = new Git({\n      debug: this.config.debug,\n      cwd: this.config.cwd,\n      sensitive: this.config.sensitive\n    })\n\n    this.npm = new Npm({\n      debug: this.config.debug,\n      cwd: this.config.cwd,\n      versionBump: this.config.versionBump,\n      sourceCwd: this.config.sourceCwd,\n      sensitive: this.config.sensitive\n    })\n\n    // Ensure/initialize\n    this.cleanBefore()\n    this.ensureDir()\n    if (this.config.remote.repo === '../') {\n      this.verifySourceBranchIsTracked()\n    }\n\n    // Set up repository\n    this.ensureGitInit()\n    this.configureGit()\n    this.ensureRemote()\n  }\n\n  ensureDir() {\n    // reestablish a build dir\n    fs.ensureDirSync(this.config.cwd)\n  }\n\n  cleanBefore() {\n    // clean dir\n    if (this.config.clean.before) {\n      fs.removeSync(this.config.cwd)\n    }\n  }\n\n  cleanAfter() {\n    // clean dir\n    if (this.config.clean.after) {\n      fs.removeSync(this.config.cwd)\n    }\n  }\n\n  resolveBranch() {\n    return (this.config.remote.branch || this.config.branch)\n  }\n\n  /**\n   *  Can run prior to tests etc to ensure versions are ready as well as commits.\n   */\n  prepublishCheck() {\n    // Check if git version meets requirements\n    let version = this.git.version()\n    if (!version || semver.lt(version, '1.8.0')) {\n      throw(`Current Git version is ${version}. This plugin requires Git >= 1.8.0.`)\n    }\n\n    // If config.commit.ensure is true check that the main project's working directory is clean\n    if (this.config.commit.ensure) {\n      this.git.ensureCommitted()\n      this.sourceGit.ensureCommitted()\n    }\n\n    if (this.config.fetch.shallow && semver.lt(version, '1.9.0')) {\n      this.notifyError(`Option \"fetch.shallow\" is supported on Git >= 1.9.0 and your version is ${version}.`)\n    }\n  }\n\n  prepublishBuildCheck() {\n    this.prepublishCheck()\n\n    // trigger message if tag exists in remote.\n    this.tagName()\n\n    // Check that build directory contains files\n    if (fs.readdirSync(this.config.cwd).length === 0) {\n      throw(`Build directory ${this.config.cwd} is empty. Nothing to version.`)\n    }\n\n    // Check that build directory exists\n    if (!fs.existsSync(this.config.cwd)) {\n      throw(`Build directory ${this.config.cwd} doesn't exist. Nothing to version.`)\n    }\n  }\n\n  /**\n   * Attempt to track a branch from origin. It may fail on times that the branch is already tracking another remote. There is no problem when that happens, nor does it have any affect\n   */\n  verifySourceBranchIsTracked() {\n    this.sourceGit.track(this.config.branch)\n  }\n\n  /**\n   * Initialize git repo if one doesn't exist\n   */\n  ensureGitInit() {\n    let repo = path.join(this.config.cwd, '.git')\n    if (!fs.existsSync(repo)) {\n      this.log(`Creating git repository in ${this.config.cwd}.`)\n      this.git.init()\n    }\n    else {\n      this.debug(`Git repo already exists in ${this.config.cwd}.`)\n    }\n  }\n\n  /**\n   * Initialize the git config\n   */\n  configureGit() {\n\n    this.debugDump(`this.config.git.config`, this.config.git.config)\n    for (let key of Object.keys(this.config.git.config)) {\n      this.git.configure(key, this.config.git.config[key])\n    }\n  }\n\n  /**\n   * Create a named remote if one doesn't exist\n   */\n  ensureRemote() {\n    let remoteUrlRegex = new RegExp('[\\/\\\\:]')\n    if (remoteUrlRegex.test(this.config.remote.repo)) {\n      this.config.remote.name = this.git.hash('remote', this.config.remote.repo)\n      if (!this.git.remote().includes(this.config.remote.name)) {\n        this.log(`Creating remote ${this.config.remote.name}`)\n        this.git.remoteAdd(this.config.remote.name, this.config.remote.repo)\n      }\n    }\n  }\n\n  /**\n   * Check if local branch can safely merge upstream (requires fetched refs)\n   * @returns {boolean}\n   */\n  shouldUpdate() {\n    // WARNING: With force, we're not even going to attempt to check out, We're just going to push the repo and override EVERYTHING in the remote\n    if (this.config.force === true) return false\n\n    let status = this.git.status()\n    if (status) {\n      let ahead = status.includes('ahead')\n      let behind = status.includes('behind')\n\n      if (ahead && behind) {\n        throw('The remote and local branches have diverged please\\n' +\n        'resolve manually. Deleting the local **built code**\\n' +\n        '.git directory will usually fix things up.')\n      }\n      else if (ahead) {\n        return false\n      }\n      else if (behind) {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Fetch remote refs to a specific branch, equivalent to a pull without checkout\n   * @param dest\n   */\n  fetch(dest) {\n    let branch = this.resolveBranch() + (dest ? ':' + this.config.branch : '');\n    this.log(`Fetching '${this.config.branch}' ${(this.config.fetch.shallow ? 'files' : 'history')} from ${this.config.remote.repo}.`);\n    this.git.fetch(this.config.remote.name, branch, this.config.fetch.shallow)\n  }\n\n  /**\n   * Set branch to track remote\n   */\n  ensureLocalBranchTracksRemote() {\n    let remoteBranch = this.config.remote.branch || this.config.branch;\n    if (this.git.configBranchRemote(this.config.branch) !== this.config.remote.name) {\n      this.git.branchRemote(this.config.branch, this.config.remote.name, remoteBranch)\n    }\n  }\n\n  sourceName() {\n    if (this._sourceName) {\n      return this._sourceName\n    }\n    else {\n      if (this.npm.package() != null) {\n        this._sourceName = this.npm.package().name\n      }\n      else {\n        this._sourceName = this.config.sourceCwd.split('/').pop()\n      }\n\n      return this._sourceName\n    }\n  }\n\n  sourceCommit() {\n    if (this._sourceCommit) {\n      return this._sourceCommit\n    }\n    return this._sourceCommit = this.sourceGit.sourceCommit()\n  }\n\n  sourceCommitFull() {\n    if (this._sourceCommitFull) {\n      return this._sourceCommitFull\n    }\n    return this._sourceCommitFull = this.sourceGit.sourceCommitFull()\n  }\n\n  sourceCommitLink() {\n    return `[\\`%sourceCommit%\\`](../../commit/%sourceCommitFull%)`\n      .replace(/%sourceCommit%/g, this.sourceCommit())\n      .replace(/%sourceCommitFull%/g, this.sourceCommitFull())\n\n  }\n\n  sourceBranch() {\n    if (this._sourceBranch) {\n      return this._sourceBranch\n    }\n    return this._sourceBranch = this.sourceGit.sourceBranch()\n  }\n\n  sourceTag() {\n    if (this._sourceTag) {\n      return this._sourceTag\n    }\n    ''\n\n    let name = this.tagName()\n    if (name) {\n      this._sourceTag = name\n    }\n    else {\n      this._sourceTag = ''\n    }\n\n    return this._sourceTag\n  }\n\n  sourceTagLink() {\n    if (this.tagName()) {\n      return `[\\`%sourceTag%\\`](../../releases/tag/%sourceTag%)`\n        .replace(/%sourceTag%/g, this.sourceTag())\n    }\n    else {\n      return ''\n    }\n  }\n\n\n  interpolate(template) {\n    return template\n      .replace(/%sourceName%/g, this.sourceName())\n      .replace(/%sourceTag%/g, this.sourceTag())\n      .replace(/%sourceTagLink%/g, this.sourceTagLink())\n      .replace(/%sourceCommit%/g, this.sourceCommit())\n      .replace(/%sourceCommitFull%/g, this.sourceCommitFull())\n      .replace(/%sourceCommitLink%/g, this.sourceCommitLink())\n      .replace(/%sourceBranch%/g, this.sourceBranch())\n  }\n\n  /**\n   * Stage and commit to a branch\n   */\n  commit() {\n\n    if (!this.config.commit.auto) {\n      return\n    }\n\n    let message = this.interpolate(this.config.commit.template)\n\n    // If there are no changes, skip commit\n    if (!this.git.status()) {\n      this.log('No changes to your branch. Skipping commit.')\n      return\n    }\n\n    this.log(`Committing changes to '${this.config.branch}'.`)\n    this.git.add()\n    this.git.commit(message)\n  }\n\n  /**\n   * Tag local branch\n   */\n  tag() {\n    let tagName = this.tagName()\n    if (!tagName) {\n      return\n    }\n\n    this.log(`Tagging the local repository with ${tagName}`)\n    this.git.tag(tagName)\n  }\n\n  /**\n   * Convenience to resolve from a fn or string.  If tag already exists in a remote, it will return false (don't forget to bump your version in the package.json!)\n   */\n  tagName() {\n    if (this._tagName !== undefined) {\n      return this._tagName\n    }\n\n    if (this.config.tag.name === false) {\n      this._tagName = false\n    }\n    else if (this.config.tag.name === undefined) {\n      this._tagName = false\n    }\n    else {\n      let name = null\n      if (typeof this.config.tag.name === 'function') {\n        name = this.config.tag.name()\n      }\n      else {\n        name = this.config.tag.name\n      }\n\n      // If the tag exists, skip tagging\n      if (name && this.tagExists(name)) {\n        let msg = `The tag \"${name}\" already exists on ${this.config.remote.name}`\n        if (this.config.tag.existsFailure) {\n          this.notifyError(msg)\n        }\n        else {\n          this.log(`WARNING: ${msg}, skipping tagging.`)\n        }\n\n        name = false\n      }\n\n      this._tagName = name\n    }\n\n    return this._tagName\n  }\n\n  /**\n   * Resolver plugged into options as tag: {name: ()} that can be overridden by a string or other fn\n   */\n  autoResolveTagName() {\n    if (this.npm.package() && this.npm.package().version) {\n      return `v${this.npm.package().version}`\n    }\n    else {\n      return false\n    }\n  }\n\n  tagExists(name) {\n    if (this.git.tagExists(name, this.config.remote.name)) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  /**\n   * Push branch to remote\n   */\n  push() {\n    if (!this.config.push) {\n      return\n    }\n\n    let branch = this.config.branch\n\n    if (this.config.remote.branch) {\n      branch += `:${this.config.remote.branch}`\n    }\n\n    this.git.push(this.config.remote.name, branch, this.config.force)\n    if (this.tagName()) {\n      this.git.pushTag(this.config.remote.name, this.tagName())\n    }\n\n    // if this was pushed to a relative path, go ahead and try and push that up to the origin\n    if (!this.config.disableRelativeAutoPush && this.config.remote.repo.includes('..')) {\n      let remote = 'origin'\n      this.log(`Repo is using relative path, pushing ${branch} from the source directory...`)\n      this.sourceGit.push(remote, branch)\n\n      if (this.tagName()) {\n        this.sourceGit.pushTag(remote, this.tagName())\n      }\n    }\n  }\n\n  localBranchExists() {\n    return this.git.branchExists(this.config.branch)\n  }\n\n  remoteBranchExists() {\n    return this.git.branchRemoteExists(this.resolveBranch(), this.config.remote.name)\n  }\n\n  run() {\n    // Run task\n    this.log(this.interpolate(`Starting %sourceName% for commit %sourceCommit% on branch %sourceBranch% using directory ${this.config.cwd}...`))\n\n    // Prepare\n    this.prepublishBuildCheck()\n\n    // Set up local branch\n    let localBranchExists = this.localBranchExists()\n    let remoteBranchExists = this.remoteBranchExists()\n\n    if (remoteBranchExists) {\n      this.fetch()\n    }\n\n    if (remoteBranchExists && localBranchExists) {\n      // Make sure local is tracking remote\n      this.ensureLocalBranchTracksRemote()\n\n      // Update local branch history if necessary\n      if (this.shouldUpdate()) {\n        this.fetch(true)\n      }\n    }\n    else if (remoteBranchExists && !localBranchExists) { //// TEST THIS ONE\n      // Create local branch that tracks remote\n      this.git.track(this.config.branch, this.config.remote.name, this.resolveBranch())\n    }\n    else if (!remoteBranchExists && !localBranchExists) {\n      // Create local branch\n      this.log(`Creating branch '${this.config.branch}'.`)\n      this.git.checkout(this.config.branch)\n    }\n\n    // Perform actions\n    this.git.symbolicRefHead(this.config.branch)\n    this.git.reset()\n\n    this.commit()\n    this.tag()\n    this.push()\n    this.cleanAfter()\n  }\n}\n\nexport default BuildControl\n"],"names":["Default","fs"],"mappings":"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"}