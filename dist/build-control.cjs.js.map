{"version":3,"file":"build-control.cjs.js","sources":["../src/base.js","../src/paths.js","../src/baseSourced.js","../src/git.js","../src/npm.js","../src/buildControl.js"],"sourcesContent":["import extend from 'extend'\nimport stringify from 'stringify-object'\nimport shelljs from 'shelljs'\nimport chalk from 'chalk'\nimport fancyLog from 'fancy-log'\n\nexport const Default = {\n  debug: false,\n  sensitive: {},\n  cwd: 'dist'        // The directory that contains your built code.\n}\n\nconst Base = class {\n\n  /**\n   *\n   * @param config - customized overrides\n   */\n  constructor(config) {\n    this.config = extend(true, {}, Default, config)\n\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  codeExec(command, logResult = true) {\n    let code = this.exec(command, logResult, true)\n    this.debug(`codeExec result: ${code}`)\n    return code\n  }\n\n  booleanExec(command) {\n    if (this.codeExec(command, false) == 0) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  /**\n   * Wraps shellJs calls that act on the file structure to give better output and error handling\n   * @param command\n   * @param logResult - return output from the execution, defaults to true. If false, will return code instead\n   * @param returnCode - defaults to false which will throw Error on error, true will return result code\n   */\n  exec(command, logResult = true, returnCode = false) {\n    let options = {silent: true}\n    if (this.config.cwd) {\n      options['cwd'] = this.config.cwd\n    }\n    else {\n      this.notifyError('cwd is required')\n    }\n\n    if(command.includes(`undefined`)){\n      this.notifyError(`Invalid command: ${command}`)\n    }\n\n    this.debug(`Executing \\`${command}\\` with cwd: ${options['cwd']}`)\n    let shellResult = shelljs.exec(command, options)\n    let output = this.logShellOutput(shellResult, logResult);\n\n    if (shellResult.code === 0 || shellResult.code === 1) {\n\n      // ---\n      // determine the return value\n      if (returnCode) {\n        return shellResult.code\n      }\n      else {\n        return output\n      }\n    }\n    else {\n      if (returnCode) {\n        return shellResult.code\n      }\n      else {\n        this.notifyError(`Command failed \\`${command}\\`, cwd: ${options.cwd}: ${shellResult.stderr}.`)\n      }\n    }\n  }\n\n  notifyError(msg){\n    this.error(msg)\n    throw new Error(this.maskSensitive(msg))\n  }\n\n  logShellOutput(shellResult, logResult) {\n    //this.debug(`[exit code] ${shellResult.code}`)\n\n    // ---\n    // Log the result\n    // strangely enough, sometimes useful messages from git are an stderr even when it is a successful command with a 0 result code\n    let output = shellResult.stdout\n    if (output == '') {\n      output = shellResult.stderr\n    }\n\n    //this.log(stringify(shellResult))\n    if (output != '') {\n      if (logResult) {\n        this.log(output)\n      }\n      else {\n        this.debug(`[output] \\n${output}`)\n      }\n    }\n    return output;\n  }\n\n  log(message, level = null){\n    let msg = ``\n    if(level){\n      msg += level\n    }\n    msg += `[${chalk.grey(this.constructor.name)}] ${message}`\n    fancyLog(this.maskSensitive(msg))\n  }\n\n  error(msg) {\n    this.log(msg, `[${chalk.red('error')}]`)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(msg, `[${chalk.cyan('debug')}]`)\n    }\n  }\n\n  maskSensitive(str) {\n    let result = str\n    for(let key of Object.keys(this.config.sensitive)){\n      result = result.replace(key, this.config.sensitive[key], 'gmi')\n    }\n    return result\n  }\n\n  debugDump(msg, obj) {\n    this.debug(`${msg}:\\n${stringify(obj)}`)\n  }\n}\n\nexport default Base\n","import path from 'path'\nimport pathIsAbsolute from 'path-is-absolute'\n\nconst Paths = class {\n\n  static resolveCwd(base, cwd) {\n    if (!pathIsAbsolute(cwd)) {\n      return path.join(base, cwd)\n    }\n    else {\n      return cwd\n    }\n  }\n}\n\nexport default Paths\n","import Base from './base'\nimport Paths from './paths'\nimport extend from 'extend'\nimport shelljs from 'shelljs'\n\nconst Default = {\n  sourceCwd: shelljs.pwd(), // The base directory of the source e.g. the directory of the package.json (not usually necessary to specify, but useful for odd structures and tests)\n  cwd: 'dist'        // The directory that contains your built code.\n}\n\nconst BaseSourced = class extends Base {\n\n  constructor(config = {}) {\n    super(extend(true, {}, Default, config))\n\n    // get a fully resolved sourceCwd based on the process cwd (if not an absolute path)\n    this.config.sourceCwd = Paths.resolveCwd(shelljs.pwd(), this.config.sourceCwd)\n\n    // get a fully resolved cwd based on the sourceCwd (if not an absolute path)\n    this.config.cwd = Paths.resolveCwd(this.config.sourceCwd, this.config.cwd)\n  }\n}\n\nexport default BaseSourced\n","import Base from './base'\nimport extend from 'extend'\nimport fs from 'fs'\nimport crypto from 'crypto'\nimport path from 'path'\n\nconst Default = {}\n\nconst Git = class extends Base {\n\n  constructor(config = {}) {\n    super(extend(true, {}, Default, config))\n  }\n\n  version() {\n    return (this.exec('git --version', false).match(/\\d+\\.\\d+\\.\\d+/) || []).shift()\n  }\n\n  diff(logResult = true) {\n    return this.exec('git diff', logResult)\n  }\n\n  ensureCommitted(){\n    let diff = this.diff(false)\n    if (diff !== '') {\n      this.notifyError(`There are uncommitted changes in your working directory ${this.config.cwd}. Please commit the changes first.`)\n    }\n    else {\n      this.debug(`No diffs (uncommitted changes) found.`)\n    }\n  }\n\n  sourceBranch() {\n    return this.exec('git rev-parse --abbrev-ref HEAD', false).replace(/\\n/g, '')\n  }\n\n  sourceCommit() {\n    return this.exec('git rev-parse --short HEAD', false).replace(/\\n/g, '')\n  }\n\n  sourceCommitFull() {\n    return this.exec('git rev-parse HEAD', false).replace(/\\n/g, '')\n  }\n\n  init() {\n    this.exec('git init')\n  }\n\n  configure(key, value) {\n    this.exec(`git config \"${key}\" \"${value}\"`)\n  }\n\n  remote() {\n    return this.exec('git remote', false)\n  }\n\n  remoteAdd(name, location) {\n    this.exec(`git remote add ${name} ${location}`)\n  }\n\n  /**\n   * Fetch remote refs to a specific branch, equivalent to a pull without checkout\n   */\n  fetch(remoteName, branch, shallow = false) {\n    let depth = shallow ? '--depth=1 ' : ''\n    // `--update-head-ok` allows fetch on a branch with uncommited changes\n    this.exec(`git fetch --progress --verbose --update-head-ok ${depth}${remoteName} ${branch}`) //, false, true)\n  }\n\n  /**\n   * Make the current working tree the branch HEAD without checking out files\n   * @param branch\n   */\n  symbolicRefHead(branch) {\n    this.exec(`git symbolic-ref HEAD refs/heads/${branch}`)\n  }\n\n  /**\n   * Make sure the stage is clean\n   */\n  reset() {\n    this.exec('git reset', false)\n  }\n\n  /**\n   *\n   * @param branch\n   * @param remoteName\n   * @param remoteBranch\n   */\n  track(branch, remoteName = 'origin', remoteBranch = null) {\n    if (remoteBranch == null) {\n      remoteBranch = branch\n    }\n    // Attempt to track a branch from origin\n    //  It may fail on times that the branch is already tracking another remote. There is no problem when that happens, nor does it have any affect\n    this.codeExec(`git branch --track ${branch} ${remoteName}/${remoteBranch}`, false)\n  }\n\n  checkout(branch) {\n    this.exec(`git checkout --orphan ${branch}`)\n  }\n\n  branchRemote(branch, remoteName, remoteBranch) {\n    this.exec(`git branch --set-upstream-to=${remoteName}/${remoteBranch} ${branch}`)\n  }\n\n  configBranchRemote(branch) {\n    try {\n      return this.exec(`git config branch.${branch}.remote`, false).replace(/\\n/g, '')\n    }\n    catch (error) {\n      return null\n    }\n  }\n\n  branchExists(branch) {\n    return this.booleanExec(`git show-ref --verify --quiet refs/heads/${branch}`)\n  }\n\n  branchRemoteExists(branch, remoteName) {\n    return this.booleanExec(`git ls-remote --exit-code ${remoteName} ${branch}`)\n  }\n\n  status(file = '') {\n    let result = this.exec(`git status -sb --porcelain ${file}`, false)\n    if (result === '') {\n      return null\n    }\n    else {\n      return result\n    }\n  }\n\n  add(file = `.`) {\n    this.exec(`git add -A ${file}`)\n  }\n\n  hash(prefix, text) {\n    return `${prefix}-${crypto.createHash('md5').update(text).digest('hex').substring(0, 6)}`\n  }\n\n  commit(message) {\n    // generate commit message\n    let commitMessageFile = path.join(this.config.cwd, this.hash('commitMessageFile', message))\n    fs.writeFileSync(commitMessageFile, message)\n    this.exec(`git commit --file=${commitMessageFile}`)\n\n    fs.unlinkSync(commitMessageFile)\n  }\n\n  tag(tag) {\n    this.exec(`git tag ${tag}`)\n  }\n\n  tagExists(tag, remoteName) {\n    return this.booleanExec(`git ls-remote --tags --exit-code ${remoteName} ${tag}`)\n  }\n\n  push(remoteName, branch, force = false) {\n    let withForce = force ? ' --force ' : ''\n\n    this.log(`Pushing ${branch} to ${remoteName}${withForce}`)\n    this.exec(`git push ${withForce}${remoteName} ${branch}`) //, false, true)\n  }\n\n  pushTag(remoteName, tag) {\n    this.exec(`git push ${remoteName} ${tag}`)\n  }\n}\n\nexport default Git\n","import BaseSourced from './baseSourced'\nimport Git from './git'\nimport extend from 'extend'\nimport fs from 'fs-extra'\nimport path from 'path'\nimport shelljs from 'shelljs'\n\nconst Default = {}\n\nconst Npm = class extends BaseSourced {\n\n  constructor(config = {}) {\n    super(extend(true, {}, Default, config))\n    this.sourceGit = new Git({cwd: this.config.sourceCwd, debug: this.config.debug, sensitive: this.config.sensitive})\n  }\n\n  publish() {\n    if(!this.hasPackage()){\n      return\n    }\n\n    this.exec('npm publish')\n  }\n\n  bump() {\n    if(!this.hasPackage()){\n      return\n    }\n\n    if(!this.config.versionBump){\n      return\n    }\n\n    this.sourceGit.ensureCommitted()\n\n    let fromVersion = this.package().version\n    this.exec(`npm --no-git-tag-version version ${this.config.versionBump}`)\n    this._package = null\n\n    let toVersion = this.package().version\n    this.sourceGit.add('package.json')\n    this.sourceGit.commit(`Bumped version from ${fromVersion} to ${toVersion}`)\n  }\n\n  package() {\n    if (this._package) {\n      return this._package\n    }\n    else {\n      return this._package = this.readPackage()\n    }\n  }\n\n  packageFile(){\n    return path.join(this.config.sourceCwd, 'package.json')\n  }\n\n  hasPackage(){\n    let file = this.packageFile()\n    if (shelljs.test('-f', file, {silent: true})) {\n      this.debug(`Found package.json at ${file}`)\n      return true\n    }\n    else {\n      this.debug(`package.json not found at ${file}`)\n      return false\n    }\n  }\n\n  readPackage() {\n    if (this.hasPackage()) {\n      return JSON.parse(fs.readFileSync(this.packageFile(), 'utf8'))\n    }\n    else {\n      return null\n    }\n  }\n}\n\nexport default Npm\n","import BaseSourced from './baseSourced'\nimport Git from './git'\nimport Npm from './npm'\nimport extend from 'extend'\nimport fs from 'fs-extra'\nimport path from 'path'\nimport url from 'url'\nimport semver from 'semver'\n\nconst Default = {\n  branch: 'dist',     // The branch to commit to.\n  versionBump: 'patch',   // Will bump the versino if package.json is present https://docs.npmjs.com/cli/version.  Pass false to avoid bump.\n  remote: {\n    repo: '../',      // The remote repo to push to (URL|RemoteName|FileSystemPath). Common examples include:\n                      //   - `git@github.com:alienfast/foo.git` - your main project's remote (gh-pages branch)\n                      //   - `../` - the local project repository itself\n\n    // If token && login are provided, the remote.repo will be formatted to include these\n    login: undefined,\n    token: undefined,\n    branch: undefined// The remote branch to push to. Common usage would be for Heroku's master branch requirement.\n  },\n  clean: { // clean the cwd dir before/after a run\n    before: false,\n    after: false\n  },\n  tag: {\n    name: undefined,   // fn or string.  Default will autoresolve from the package.json version if possible.  Pass false to avoid tagging.\n    existsFailure: true // if tag already exists, fail the execution\n  },\n  push: true,        // Pushes `branch` to remote. If tag is set, pushes the specified tag as well. false will disable\n  disableRelativeAutoPush: false, // when testing, we may have nothing to push to.  By default, if using a remote repo that is relative, will try to push using the config.branch using the sourceGit all the way to the server.\n  commit: {\n    auto: true,      // Commits built code to `branch`. A new commit is only created if the built code has changed. false will disable\n\n    // The commit template to use when committing. (special characters must be escaped)\n    //  The following tokens are replaced:\n    //    - %sourceName%:   the package.json name or the project directory name\n    //    - %sourceTag%: the current tag i.e. v1.0.0\n    //    - %sourceBranch%: the current branch\n    //    - %sourceCommit%: the most recent commit\n    template: `Built %sourceName% %sourceTag% from commit %sourceCommit% on branch %sourceBranch%`,\n    ensure: true // require the source and build to be fully committed prior to running.\n  },\n  fetch: {\n    shallow: false    // Fetches branch from remote with the flag --depth=1. Which makes a shallow clone with a history truncated to the last revision. Might bring some boost on long-history repositories.\n  },\n  git: {\n    config: {}         // [git config](http://git-scm.com/docs/git-config) settings for the repository when preparing the repository. e.g. `{'user.name': 'John Doe'}`\n  },\n  force: false     // Pushes branch to remote with the flag --force. This will NOT checkout the remote branch, and will OVERRIDE remote with the repo commits.  Use with caution.\n}\n\nconst BuildControl = class extends BaseSourced {\n\n  constructor(config = {}) {\n    super(extend(true, {},\n      Default,\n      {tag: {name: () => this.autoResolveTagName()}}, // tag package version auto resolver\n      config\n    ))\n\n    // modify\n\n    // Build remote repo if sensitive information is passed in\n    if (this.config.remote.login && this.config.remote.token) {\n      this.log(`Configuring remote with login and token...`)\n      let remote = url.parse(this.config.remote.repo)\n\n      this.config.remote.repo = url.format({\n        protocol: remote.protocol,\n        auth: this.config.remote.login + ':' + this.config.remote.token,\n        host: remote.host,\n        pathname: remote.pathname\n      })\n\n      // configure sensitive information\n      this.config.sensitive[`${this.config.remote.login}:${this.config.remote.token}`] = '<credentials>'\n      this.config.sensitive[this.config.remote.token] = '<token>'\n    }\n\n    this.sourceGit = new Git({\n      debug: this.config.debug,\n      cwd: this.config.sourceCwd,\n      sensitive: this.config.sensitive\n    })\n\n    this.git = new Git({\n      debug: this.config.debug,\n      cwd: this.config.cwd,\n      sensitive: this.config.sensitive\n    })\n\n    this.npm = new Npm({\n      debug: this.config.debug,\n      cwd: this.config.cwd,\n      versionBump: this.config.versionBump,\n      sourceCwd: this.config.sourceCwd,\n      sensitive: this.config.sensitive\n    })\n\n    // Ensure/initialize\n    this.cleanBefore()\n    this.ensureDir()\n    if (this.config.remote.repo === '../') {\n      this.verifySourceBranchIsTracked()\n    }\n\n    // Set up repository\n    this.ensureGitInit()\n    this.configureGit()\n    this.ensureRemote()\n  }\n\n  ensureDir() {\n    // reestablish a build dir\n    fs.ensureDirSync(this.config.cwd)\n  }\n\n  cleanBefore() {\n    // clean dir\n    if (this.config.clean.before) {\n      fs.removeSync(this.config.cwd)\n    }\n  }\n\n  cleanAfter() {\n    // clean dir\n    if (this.config.clean.after) {\n      fs.removeSync(this.config.cwd)\n    }\n  }\n\n  resolveBranch() {\n    return (this.config.remote.branch || this.config.branch)\n  }\n\n  /**\n   *  Can run prior to tests etc to ensure versions are ready as well as commits.\n   */\n  prepublishCheck() {\n    // Check if git version meets requirements\n    let version = this.git.version()\n    if (!version || semver.lt(version, '1.8.0')) {\n      throw(`Current Git version is ${version}. This plugin requires Git >= 1.8.0.`)\n    }\n\n    // If config.commit.ensure is true check that the main project's working directory is clean\n    if (this.config.commit.ensure) {\n      this.git.ensureCommitted()\n      this.sourceGit.ensureCommitted()\n    }\n\n    if (this.config.fetch.shallow && semver.lt(version, '1.9.0')) {\n      this.notifyError(`Option \"fetch.shallow\" is supported on Git >= 1.9.0 and your version is ${version}.`)\n    }\n  }\n\n  prepublishBuildCheck() {\n    this.prepublishCheck()\n\n    // trigger message if tag exists in remote.\n    this.tagName()\n\n    // Check that build directory contains files\n    if (fs.readdirSync(this.config.cwd).length === 0) {\n      throw(`Build directory ${this.config.cwd} is empty. Nothing to version.`)\n    }\n\n    // Check that build directory exists\n    if (!fs.existsSync(this.config.cwd)) {\n      throw(`Build directory ${this.config.cwd} doesn't exist. Nothing to version.`)\n    }\n  }\n\n  /**\n   * Attempt to track a branch from origin. It may fail on times that the branch is already tracking another remote. There is no problem when that happens, nor does it have any affect\n   */\n  verifySourceBranchIsTracked() {\n    this.sourceGit.track(this.config.branch)\n  }\n\n  /**\n   * Initialize git repo if one doesn't exist\n   */\n  ensureGitInit() {\n    let repo = path.join(this.config.cwd, '.git')\n    if (!fs.existsSync(repo)) {\n      this.log(`Creating git repository in ${this.config.cwd}.`)\n      this.git.init()\n    }\n    else {\n      this.debug(`Git repo already exists in ${this.config.cwd}.`)\n    }\n  }\n\n  /**\n   * Initialize the git config\n   */\n  configureGit() {\n\n    this.debugDump(`this.config.git.config`, this.config.git.config)\n    for (let key of Object.keys(this.config.git.config)) {\n      this.git.configure(key, this.config.git.config[key])\n    }\n  }\n\n  /**\n   * Create a named remote if one doesn't exist\n   */\n  ensureRemote() {\n    let remoteUrlRegex = new RegExp('[\\/\\\\:]')\n    if (remoteUrlRegex.test(this.config.remote.repo)) {\n      this.config.remote.name = this.git.hash('remote', this.config.remote.repo)\n      if (!this.git.remote().includes(this.config.remote.name)) {\n        this.log(`Creating remote ${this.config.remote.name}`)\n        this.git.remoteAdd(this.config.remote.name, this.config.remote.repo)\n      }\n    }\n  }\n\n  /**\n   * Check if local branch can safely merge upstream (requires fetched refs)\n   * @returns {boolean}\n   */\n  shouldUpdate() {\n    // WARNING: With force, we're not even going to attempt to check out, We're just going to push the repo and override EVERYTHING in the remote\n    if (this.config.force === true) return false\n\n    let status = this.git.status()\n    if (status) {\n      let ahead = status.includes('ahead')\n      let behind = status.includes('behind')\n\n      if (ahead && behind) {\n        throw('The remote and local branches have diverged please\\n' +\n        'resolve manually. Deleting the local **built code**\\n' +\n        '.git directory will usually fix things up.')\n      }\n      else if (ahead) {\n        return false\n      }\n      else if (behind) {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Fetch remote refs to a specific branch, equivalent to a pull without checkout\n   * @param dest\n   */\n  fetch(dest) {\n    let branch = this.resolveBranch() + (dest ? ':' + this.config.branch : '');\n    this.log(`Fetching '${this.config.branch}' ${(this.config.fetch.shallow ? 'files' : 'history')} from ${this.config.remote.repo}.`);\n    this.git.fetch(this.config.remote.name, branch, this.config.fetch.shallow)\n  }\n\n  /**\n   * Set branch to track remote\n   */\n  ensureLocalBranchTracksRemote() {\n    let remoteBranch = this.config.remote.branch || this.config.branch;\n    if (this.git.configBranchRemote(this.config.branch) !== this.config.remote.name) {\n      this.git.branchRemote(this.config.branch, this.config.remote.name, remoteBranch)\n    }\n  }\n\n  sourceName() {\n    if (this._sourceName) {\n      return this._sourceName\n    }\n    else {\n      if (this.npm.package() != null) {\n        this._sourceName = this.npm.package().name\n      }\n      else {\n        this._sourceName = this.config.sourceCwd.split('/').pop()\n      }\n\n      return this._sourceName\n    }\n  }\n\n  sourceCommit() {\n    if (this._sourceCommit) {\n      return this._sourceCommit\n    }\n    return this._sourceCommit = this.sourceGit.sourceCommit()\n  }\n\n  sourceCommitFull() {\n    if (this._sourceCommitFull) {\n      return this._sourceCommitFull\n    }\n    return this._sourceCommitFull = this.sourceGit.sourceCommitFull()\n  }\n\n  sourceCommitLink() {\n    return `[\\`%sourceCommit%\\`](../../commit/%sourceCommitFull%)`\n      .replace(/%sourceCommit%/g, this.sourceCommit())\n      .replace(/%sourceCommitFull%/g, this.sourceCommitFull())\n\n  }\n\n  sourceBranch() {\n    if (this._sourceBranch) {\n      return this._sourceBranch\n    }\n    return this._sourceBranch = this.sourceGit.sourceBranch()\n  }\n\n  sourceTag() {\n    if (this._sourceTag) {\n      return this._sourceTag\n    }\n    ''\n\n    let name = this.tagName()\n    if (name) {\n      this._sourceTag = name\n    }\n    else {\n      this._sourceTag = ''\n    }\n\n    return this._sourceTag\n  }\n\n  sourceTagLink() {\n    if (this.tagName()) {\n      return `[\\`%sourceTag%\\`](../../releases/tag/%sourceTag%)`\n        .replace(/%sourceTag%/g, this.sourceTag())\n    }\n    else {\n      return ''\n    }\n  }\n\n\n  interpolate(template) {\n    return template\n      .replace(/%sourceName%/g, this.sourceName())\n      .replace(/%sourceTag%/g, this.sourceTag())\n      .replace(/%sourceTagLink%/g, this.sourceTagLink())\n      .replace(/%sourceCommit%/g, this.sourceCommit())\n      .replace(/%sourceCommitFull%/g, this.sourceCommitFull())\n      .replace(/%sourceCommitLink%/g, this.sourceCommitLink())\n      .replace(/%sourceBranch%/g, this.sourceBranch())\n  }\n\n  /**\n   * Stage and commit to a branch\n   */\n  commit() {\n\n    if (!this.config.commit.auto) {\n      return\n    }\n\n    let message = this.interpolate(this.config.commit.template)\n\n    // If there are no changes, skip commit\n    if (!this.git.status()) {\n      this.log('No changes to your branch. Skipping commit.')\n      return\n    }\n\n    this.log(`Committing changes to '${this.config.branch}'.`)\n    this.git.add()\n    this.git.commit(message)\n  }\n\n  /**\n   * Tag local branch\n   */\n  tag() {\n    let tagName = this.tagName()\n    if (!tagName) {\n      return\n    }\n\n    this.log(`Tagging the local repository with ${tagName}`)\n    this.git.tag(tagName)\n  }\n\n  /**\n   * Convenience to resolve from a fn or string.  If tag already exists in a remote, it will return false (don't forget to bump your version in the package.json!)\n   */\n  tagName() {\n    if (this._tagName !== undefined) {\n      return this._tagName\n    }\n\n    if (this.config.tag.name === false) {\n      this._tagName = false\n    }\n    else if (this.config.tag.name === undefined) {\n      this._tagName = false\n    }\n    else {\n      let name = null\n      if (typeof this.config.tag.name === 'function') {\n        name = this.config.tag.name()\n      }\n      else {\n        name = this.config.tag.name\n      }\n\n      // If the tag exists, skip tagging\n      if (name && this.tagExists(name)) {\n        let msg = `The tag \"${name}\" already exists on ${this.config.remote.name}`\n        if (this.config.tag.existsFailure) {\n          this.notifyError(msg)\n        }\n        else {\n          this.log(`WARNING: ${msg}, skipping tagging.`)\n        }\n\n        name = false\n      }\n\n      this._tagName = name\n    }\n\n    return this._tagName\n  }\n\n  /**\n   * Resolver plugged into options as tag: {name: ()} that can be overridden by a string or other fn\n   */\n  autoResolveTagName() {\n    if (this.npm.package() && this.npm.package().version) {\n      return `v${this.npm.package().version}`\n    }\n    else {\n      return false\n    }\n  }\n\n  tagExists(name) {\n    if (this.git.tagExists(name, this.config.remote.name)) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  /**\n   * Push branch to remote\n   */\n  push() {\n    if (!this.config.push) {\n      return\n    }\n\n    let branch = this.config.branch\n\n    if (this.config.remote.branch) {\n      branch += `:${this.config.remote.branch}`\n    }\n\n    this.git.push(this.config.remote.name, branch, this.config.force)\n    if (this.tagName()) {\n      this.git.pushTag(this.config.remote.name, this.tagName())\n    }\n\n    // if this was pushed to a relative path, go ahead and try and push that up to the origin\n    if (!this.config.disableRelativeAutoPush && this.config.remote.repo.includes('..')) {\n      let remote = 'origin'\n      this.log(`Repo is using relative path, pushing ${branch} from the source directory...`)\n      this.sourceGit.push(remote, branch)\n\n      if (this.tagName()) {\n        this.sourceGit.pushTag(remote, this.tagName())\n      }\n    }\n  }\n\n  localBranchExists() {\n    return this.git.branchExists(this.config.branch)\n  }\n\n  remoteBranchExists() {\n    return this.git.branchRemoteExists(this.resolveBranch(), this.config.remote.name)\n  }\n\n  run() {\n    // Run task\n    this.log(this.interpolate(`Starting %sourceName% for commit %sourceCommit% on branch %sourceBranch% using directory ${this.config.cwd}...`))\n\n    // Prepare\n    this.prepublishBuildCheck()\n\n    // Set up local branch\n    let localBranchExists = this.localBranchExists()\n    let remoteBranchExists = this.remoteBranchExists()\n\n    if (remoteBranchExists) {\n      this.fetch()\n    }\n\n    if (remoteBranchExists && localBranchExists) {\n      // Make sure local is tracking remote\n      this.ensureLocalBranchTracksRemote()\n\n      // Update local branch history if necessary\n      if (this.shouldUpdate()) {\n        this.fetch(true)\n      }\n    }\n    else if (remoteBranchExists && !localBranchExists) { //// TEST THIS ONE\n      // Create local branch that tracks remote\n      this.git.track(this.config.branch, this.config.remote.name, this.resolveBranch())\n    }\n    else if (!remoteBranchExists && !localBranchExists) {\n      // Create local branch\n      this.log(`Creating branch '${this.config.branch}'.`)\n      this.git.checkout(this.config.branch)\n    }\n\n    // Perform actions\n    this.git.symbolicRefHead(this.config.branch)\n    this.git.reset()\n\n    this.commit()\n    this.tag()\n    this.push()\n    this.cleanAfter()\n  }\n}\n\nexport default BuildControl\n"],"names":["Default","fs"],"mappings":"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"}